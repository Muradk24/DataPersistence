// Generated by view binder compiler. Do not edit!
package edu.farmingdale.alrajab.bcs421.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import edu.farmingdale.alrajab.bcs421.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityUsersBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final EditText etfirstName;

  @NonNull
  public final EditText etlastName;

  @NonNull
  public final Button readButton;

  @NonNull
  public final Button saveButton;

  @NonNull
  public final Button updateButton;

  private ActivityUsersBinding(@NonNull ConstraintLayout rootView, @NonNull EditText etfirstName,
      @NonNull EditText etlastName, @NonNull Button readButton, @NonNull Button saveButton,
      @NonNull Button updateButton) {
    this.rootView = rootView;
    this.etfirstName = etfirstName;
    this.etlastName = etlastName;
    this.readButton = readButton;
    this.saveButton = saveButton;
    this.updateButton = updateButton;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityUsersBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityUsersBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_users, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityUsersBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.etfirstName;
      EditText etfirstName = ViewBindings.findChildViewById(rootView, id);
      if (etfirstName == null) {
        break missingId;
      }

      id = R.id.etlastName;
      EditText etlastName = ViewBindings.findChildViewById(rootView, id);
      if (etlastName == null) {
        break missingId;
      }

      id = R.id.readButton;
      Button readButton = ViewBindings.findChildViewById(rootView, id);
      if (readButton == null) {
        break missingId;
      }

      id = R.id.saveButton;
      Button saveButton = ViewBindings.findChildViewById(rootView, id);
      if (saveButton == null) {
        break missingId;
      }

      id = R.id.updateButton;
      Button updateButton = ViewBindings.findChildViewById(rootView, id);
      if (updateButton == null) {
        break missingId;
      }

      return new ActivityUsersBinding((ConstraintLayout) rootView, etfirstName, etlastName,
          readButton, saveButton, updateButton);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
